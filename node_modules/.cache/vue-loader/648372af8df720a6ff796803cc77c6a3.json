{"remainingRequest":"C:\\Users\\18697\\Desktop\\小程序\\testUpload\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\18697\\Desktop\\小程序\\testUpload\\src\\views\\home.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\18697\\Desktop\\小程序\\testUpload\\src\\views\\home.vue","mtime":1609074110442},{"path":"C:\\Users\\18697\\Desktop\\小程序\\testUpload\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1608990168112},{"path":"C:\\Users\\18697\\Desktop\\小程序\\testUpload\\node_modules\\babel-loader\\lib\\index.js","mtime":1608990194810},{"path":"C:\\Users\\18697\\Desktop\\小程序\\testUpload\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1608990168112},{"path":"C:\\Users\\18697\\Desktop\\小程序\\testUpload\\node_modules\\vue-loader\\lib\\index.js","mtime":1608990189388}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport mammoth from \"mammoth\";\r\nimport XLSX from \"xlsx\";\r\nimport axios from \"axios\";\r\nimport pdf from 'vue-pdf'\r\nexport default {\r\n  data() {\r\n    return {\r\n      fileurl: \"/file/api/upload\",\r\n      url: \"\",\r\n       vHtml: '',\r\n        tableData: [],\r\n      workbook: {},\r\n      pdfUrl:''\r\n     \r\n    };\r\n\r\n  },\r\n  components: {\r\n    pdf,\r\n  },\r\n  methods: {\r\n    handleupload(event) {\r\n      console.log(event);\r\n      this.url = '/file'+ event.data;\r\n    },\r\n    handletap() {\r\n\t const xhr = new XMLHttpRequest();\r\n    xhr.open(\"get\", this.url, true);\r\n    xhr.responseType = \"arraybuffer\";\r\n    let _this = this\r\n    xhr.onload = function () {\r\n      if (xhr.status == 200) {\r\n\t\t  console.log('999');\r\n\t\t  console.log(new Uint8Array(xhr.response));\r\n\t\t\tmammoth.convertToHtml({arrayBuffer: new Uint8Array(xhr.response)})\r\n    .then(function(result){\r\n        var html = result.value; // The generated HTML\r\n        console.log(_this);\r\n         _this.vHtml = html\r\n        var messages = result.messages; // Any messages, such as warnings during conversion\r\n    })\r\n    .done();\r\n\t\t\r\n      }\r\n    };\r\n    xhr.send();\r\n   \r\n    },\r\n    handleclick(){\r\n     axios({\r\n       url:this.url,\r\n       method:'get',\r\n       responseType: 'arraybuffer'\r\n     }).then(res=>{\r\n       let _this = this\r\n      mammoth.convertToHtml({arrayBuffer: new Uint8Array(res.data)})\r\n      .then(function(result){\r\n        var html = result.value; // The generated HTML\r\n        console.log(_this);\r\n         _this.vHtml = html\r\n        var messages = result.messages; // Any messages, such as warnings during conversion\r\n    })\r\n    .done();\r\n     })\r\n    },\r\n    handleexcel(){\r\n       axios({\r\n       url:this.url,\r\n       method:'get',\r\n       responseType: 'arraybuffer'\r\n     }).then(res=>{\r\n        let _this = this\r\n       console.log(res);\r\n       var data = new Uint8Array(res.data);\r\n        var workbook = XLSX.read(data, { type: \"buffer\" });\r\n       //var workbook = XLSX.readFile(data)\r\n          console.log(workbook);\r\n           var sheetNames = workbook.SheetNames; // 工作表名称集合\r\n           _this.workbook = workbook;\r\n          _this.getTable(sheetNames[0]);\r\n     })\r\n    },\r\n    getTable(sheetName) {\r\n\r\n      var worksheet = this.workbook.Sheets[sheetName];\r\n      console.log(worksheet);\r\n      this.tableData = XLSX.utils.sheet_to_json(worksheet);\r\n     // this.vHtml = XLSX.utils.sheet_to_html(worksheet);\r\n     // this.tableData = XLSX.utils.sheet_to_csv(worksheet);\r\n      console.log(this.tableData);\r\n\r\n    },\r\n    handlepdf(){\r\n        axios({\r\n       url:this.url,\r\n       method:'get',\r\n       responseType: 'arraybuffer'\r\n     }).then(res=>{\r\n       console.log(res);\r\n       const path = res.request.responseURL\r\n       this.pdfUrl = pdf.createLoadingTask(path)\r\n       console.log(this.pdfUrl);\r\n     })\r\n    }\r\n  },\r\n};\r\n",{"version":3,"sources":["home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"home.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"home\">\r\n    <el-upload\r\n      class=\"upload-demo\"\r\n      :action=\"fileurl\"\r\n      :limit=\"1\"\r\n      :on-success=\"handleupload\"\r\n    >\r\n      <el-button size=\"small\" type=\"primary\">点击上传</el-button>\r\n      <div slot=\"tip\" class=\"el-upload__tip\">\r\n        只能上传jpg/png文件，且不超过500kb\r\n      </div>\r\n    </el-upload>\r\n    <button @click=\"handletap\">普通预览word</button>\r\n     <button @click=\"handleclick\">axios预览word</button>\r\n     <button @click=\"handleexcel\">excel预览</button>\r\n      <button @click=\"handlepdf\">pdf预览</button>\r\n     <div v-html=\"vHtml\" />\r\n     <el-table :data=\"tableData\" style=\"width: 100%\">\r\n      <el-table-column\r\n        v-for=\"(value,key,index) in tableData[0]\"\r\n        :key=\"index\"\r\n        :prop=\"key\"\r\n        :label=\"key\"\r\n      ></el-table-column>\r\n    </el-table>\r\n    <div>\r\n          <pdf ref=\"pdf\" :src=\"pdfUrl\" style=\"width: 100%;\" />\r\n    </div>\r\n    \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport mammoth from \"mammoth\";\r\nimport XLSX from \"xlsx\";\r\nimport axios from \"axios\";\r\nimport pdf from 'vue-pdf'\r\nexport default {\r\n  data() {\r\n    return {\r\n      fileurl: \"/file/api/upload\",\r\n      url: \"\",\r\n       vHtml: '',\r\n        tableData: [],\r\n      workbook: {},\r\n      pdfUrl:''\r\n     \r\n    };\r\n\r\n  },\r\n  components: {\r\n    pdf,\r\n  },\r\n  methods: {\r\n    handleupload(event) {\r\n      console.log(event);\r\n      this.url = '/file'+ event.data;\r\n    },\r\n    handletap() {\r\n\t const xhr = new XMLHttpRequest();\r\n    xhr.open(\"get\", this.url, true);\r\n    xhr.responseType = \"arraybuffer\";\r\n    let _this = this\r\n    xhr.onload = function () {\r\n      if (xhr.status == 200) {\r\n\t\t  console.log('999');\r\n\t\t  console.log(new Uint8Array(xhr.response));\r\n\t\t\tmammoth.convertToHtml({arrayBuffer: new Uint8Array(xhr.response)})\r\n    .then(function(result){\r\n        var html = result.value; // The generated HTML\r\n        console.log(_this);\r\n         _this.vHtml = html\r\n        var messages = result.messages; // Any messages, such as warnings during conversion\r\n    })\r\n    .done();\r\n\t\t\r\n      }\r\n    };\r\n    xhr.send();\r\n   \r\n    },\r\n    handleclick(){\r\n     axios({\r\n       url:this.url,\r\n       method:'get',\r\n       responseType: 'arraybuffer'\r\n     }).then(res=>{\r\n       let _this = this\r\n      mammoth.convertToHtml({arrayBuffer: new Uint8Array(res.data)})\r\n      .then(function(result){\r\n        var html = result.value; // The generated HTML\r\n        console.log(_this);\r\n         _this.vHtml = html\r\n        var messages = result.messages; // Any messages, such as warnings during conversion\r\n    })\r\n    .done();\r\n     })\r\n    },\r\n    handleexcel(){\r\n       axios({\r\n       url:this.url,\r\n       method:'get',\r\n       responseType: 'arraybuffer'\r\n     }).then(res=>{\r\n        let _this = this\r\n       console.log(res);\r\n       var data = new Uint8Array(res.data);\r\n        var workbook = XLSX.read(data, { type: \"buffer\" });\r\n       //var workbook = XLSX.readFile(data)\r\n          console.log(workbook);\r\n           var sheetNames = workbook.SheetNames; // 工作表名称集合\r\n           _this.workbook = workbook;\r\n          _this.getTable(sheetNames[0]);\r\n     })\r\n    },\r\n    getTable(sheetName) {\r\n\r\n      var worksheet = this.workbook.Sheets[sheetName];\r\n      console.log(worksheet);\r\n      this.tableData = XLSX.utils.sheet_to_json(worksheet);\r\n     // this.vHtml = XLSX.utils.sheet_to_html(worksheet);\r\n     // this.tableData = XLSX.utils.sheet_to_csv(worksheet);\r\n      console.log(this.tableData);\r\n\r\n    },\r\n    handlepdf(){\r\n        axios({\r\n       url:this.url,\r\n       method:'get',\r\n       responseType: 'arraybuffer'\r\n     }).then(res=>{\r\n       console.log(res);\r\n       const path = res.request.responseURL\r\n       this.pdfUrl = pdf.createLoadingTask(path)\r\n       console.log(this.pdfUrl);\r\n     })\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped >\r\n#table {\r\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  color: #2c3e50;\r\n  margin-top: 60px;\r\n  border: 1px solid #ebebeb;\r\n  padding: 20px;\r\n  width: 80%;\r\n  margin: 20px auto;\r\n  border-shadow: 0 0 8px 0 rgba(232, 237, 250, 0.6), 0 2px 4px 0 rgba(232, 237, 250, 0.5);\r\n  border-radius: 10px;\r\n  overflow: scroll;\r\n  height: 100%;\r\n\r\n \r\n}\r\n .tab {\r\n    margin: 0 0 20px 0;\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n</style>\r\n"]}]}